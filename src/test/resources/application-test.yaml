service-to-service:
  publication-services: localhost:8081

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus

#If you use a database then uncomment below lines and update db properties accordingly
spring:
  config:
    import: "optional:configtree:/mnt/secrets/pip-ss-kv/"
  jackson:
    parser:
      STRICT_DUPLICATE_DETECTION: true
  application:
    name: Account Management
  datasource:
    driver-class-name: org.postgresql.Driver

    url: jdbc:postgresql://${DB_NAME}.postgres.database.azure.com:${DB_PORT}/postgres
    username: ${DB_USER}
    password: ${DB_PASS}
    properties:
      charSet: UTF-8
    hikari:
      minimumIdle: 2
      maximumPoolSize: 10
      idleTimeout: 10000
      poolName: ConnectionPool
      maxLifetime: 7200000
      connectionTimeout: 30000
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL81Dialect
        jdbc:
          lob:
            non_contextual_creation: true
    database: POSTGRESQL
    generate-ddl: 'true'
    hibernate:
      # this ensures the db persists after spring boot connection drops.
      ddl-auto: update

azure:
  application-insights:
    instrumentation-key: ${rpe.AppInsightsInstrumentationKey:00000000-0000-0000-0000-000000000000}
  id:
    client-id: ${CLIENT_ID:00000000-0000-0000-0000-000000000000}
    client-secret: ${CLIENT_SECRET}
    tenant-guid: ${TENANT_GUID:00000000-0000-0000-0000-000000000000}
    extension-id: ${EXTENSION_ID:00000000-0000-0000-0000-000000000000}
    token-provider: "https://graph.microsoft.com/.default"
  user:
    identity-issuer: "pib2csbox.onmicrosoft.com"
    signInType: emailAddress
